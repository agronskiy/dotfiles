EDITOR='subl -wn'
alias slt='subl -w'

# https://superuser.com/questions/544989/does-tmux-sort-the-path-variable
if [ -f /etc/profile ]; then
    PATH=""
    source /etc/profile
fi

if [ -f $HOME/.bashrc ]; then
        source $HOME/.bashrc
fi

# Various useful colors
#
# Check https://unix.stackexchange.com/questions/124407/what-color-codes-can-i-use-in-my-ps1-prompt
# for more colors codes
        RED="\[\033[0;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[1;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
 LIGHT_BLUE="\[\033[38;5;81m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\033[0m\]"

# For iPython Notebook issue - need to set the locale, but not all (?)
# export LC_ALL=en_US.UTF-8
# export LANG=en_US.UTF-8

export LC_CTYPE=en_US.UTF-8

# Makes colors in CLI ls output
alias ls="ls -GpF"  # ls output with "/" for folders
alias ll='ls -lG'
export LSCOLORS="ExGxBxDxCxEgEdxbxgxcxd"  # ls colors

export TERM=xterm-256color

# # Original line of invitation to type a command
# export PS1="\u: \W\$ "

export PATH=/usr/local/bin:/usr/local/sbin:$PATH

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Sourcing the autocompletion, see https://docs.brew.sh/Shell-Completion
HOMEBREW_PREFIX=$(brew --prefix)
if type brew &>/dev/null; then
  if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
    source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
  else
    for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
      [[ -r "$COMPLETION" ]] && source "$COMPLETION"
    done
  fi
fi

# FZF typically adds it to the .bashrc
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Courtesy of Eli Bendersky blog + mods
log_bash_persistent_history()
{
  [[ $(history 1) =~ ^[[:space:]]*[0-9]+[[:space:]]+(.+)$ ]]
  local command_part="${BASH_REMATCH[1]}"
  if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ] \
    && ! [[ "$command_part " =~ ^(no)?hhh{0,1}[[:space:]]+ ]];
  then
    echo "$(date "+%Y-%m-%d.%H:%M:%S")" " | " "$command_part" >> ~/.persistent_history
    export PERSISTENT_HISTORY_LAST="$command_part"
  fi
}

# Skip putting to history. Usage "nohh ls -l"
function nohh()
{
    "$@";
}

# Finding history
function hhh()
{
    if [[ $# -eq 0 ]]; then
        cat ~/.persistent_history | less -R +G
    elif [[ $# -eq 1 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | less -R +G
    elif [[ $# -eq 2 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | grep -i -- "$2" | less -R +G
    elif [[ $# -eq 3 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | grep -i -- "$2" | grep -i -- "$3" | less -R +G
    fi
}

function hh()
{
    if [[ $# -eq 0 ]]; then
        cat ~/.persistent_history | tail -n 50
    elif [[ $# -eq 1 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | tail -n 50
    elif [[ $# -eq 2 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | grep -i -- "$2" | tail -n 50
    elif [[ $# -eq 3 ]]; then
        cat ~/.persistent_history | grep -i --color=always -- "$1" | grep -i -- "$2" | grep -i -- "$3" | tail -n 50
    fi
}

# Setting prompt command to branch status
source /usr/local/etc/bash_completion.d/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWCOLORHINTS=1

PROMPT_DIRTRIM=3

# Determine active Python virtualenv details.
function get_virtualenv() {
    if ! test -z "$VIRTUAL_ENV" ; then
       echo "${YELLOW}[`basename \"$VIRTUAL_ENV\"`]${COLOR_NONE} "
    fi
    if ! test -z "$CONDA_DEFAULT_ENV" ; then
       echo "${YELLOW}[`basename \"$CONDA_DEFAULT_ENV\"`]${COLOR_NONE} "
    fi
}

function get_err_code() {
    local EXIT="$?"
    CODE=""
    if [ $EXIT != 0 ]; then
        echo "${RED}[✗]${COLOR_NONE} "
    else
        echo "${LIGHT_GREEN}[✓]${COLOR_NONE} "
    fi
}

function middle_part() {
    # echo -e "${BLUE}\u:${WHITE}$(python ~/.short_pwd.py)${COLOR_NONE}"
    echo -e "${BLUE}\u:${WHITE}\w${COLOR_NONE}"
}

function prompt_symbol() {
    echo -e  "\n${LIGHT_GREEN}➙  "
}

function __prompt_command() {
    __git_ps1 "\n$(get_err_code)$(get_virtualenv)$(middle_part)" "$(prompt_symbol)"

    log_bash_persistent_history
}
# export PS1="${WHITE}\u:${COLOR_NONE}\w ${LIGHT_BLUE}\$${COLOR_NONE}"
PROMPT_COMMAND=__prompt_command
trap 'tput sgr0' DEBUG

# Alias for git log graph
# alias glog='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'
alias glog='git log --graph --abbrev-commit --decorate --format=format:"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)" --all'
alias glog2='git log --graph --abbrev-commit --decorate --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n""          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)" --all'
export PATH="/usr/local/opt/ruby/bin:$PATH"

# Arcanist:
export PATH=$HOME/phabricator/arcanist/bin:$PATH

# For some small files
export PATH=$HOME/bin:$PATH
export PATH=$HOME/repos/exp/user/alex/scripts/personal-bin:$PATH

# PKG_CONFIGS
export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/agronsky/google-cloud-sdk/path.bash.inc' ]; then . '/Users/agronsky/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/agronsky/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/agronsky/google-cloud-sdk/completion.bash.inc'; fi



# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/agronsky/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/agronsky/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/agronsky/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/agronsky/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda activate py37

# This allows grepping with colors
export GREP_OPTIONS='--color=always'
export GREP_COLOR='1;35;40'
. "$HOME/.cargo/env"
